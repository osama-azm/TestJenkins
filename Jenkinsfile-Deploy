pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        CLUSTER_NAME = 'my-eks-cluster'
    }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch to build the Docker image from')
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "Checking out code from branch: ${params.BRANCH_NAME}..."
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/${params.BRANCH_NAME}"]],
                    userRemoteConfigs: [[url: 'https://github.com/osama-azm/TestJenkins.git']]
                ])
            }
        }


        stage('Update kubeconfig') {
            steps {
                script {
                    sh '''
                    export KUBECONFIG=/var/jenkins_home/.kube/config
                    kubectl config get-contexts
                    kubectl config use-context minikube
                    '''
                }
            }
        }


        stage('Deploy Helm Template') {
            steps {
                script {

                    sh 'helm upgrade shipr-release ./Shipr-Helm --namespace shipr-namespace --create-namespace'
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
        }
        success {
            echo 'Deployment successful'
        }
        failure {
            echo 'Deployment failed'
        }
    }
}
